# .github/workflows/deploy.yml
name: Deploy to PythonAnywhere
on:
  push:
    branches:
      - publish  # or master, depending on your default branch

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install requests
        
    - name: Create deployment script
      run: |
        cat > deploy.py << EOL
        import os
        import requests
        import time

        # Configuration
        username = os.environ['ALISAN_USERNAME']
        token = os.environ['ALISAN_API_TOKEN']
        domain = f"{username}.pythonanywhere.com"

        # API endpoints
        api_base = f"https://www.pythonanywhere.com/api/v0/user/{username}"
        console_url = f"{api_base}/consoles/"
        files_url = f"{api_base}/files/"
        webapp_url = f"{api_base}/webapps/{domain}/"

        # Headers for API requests
        headers = {'Authorization': f'Token {token}'}

        def create_console():
            """Create a new Bash console and return its id"""
            response = requests.post(
                console_url,
                headers=headers,
                json={"executable": "bash", "working_directory": f"/home/{username}"}
            )
            response.raise_for_status()
            return response.json()['id']

        def run_command(console_id, command):
            """Run a command in the console"""
            # Send command
            response = requests.post(
                f"{console_url}{console_id}/send_input/",
                headers=headers,
                data={"input": command + "\n"}
            )
            response.raise_for_status()
            
            # Wait for command to complete
            time.sleep(5)  # Give some time for the command to execute

        def reload_webapp():
            """Reload the web application"""
            response = requests.post(
                webapp_url + "reload/",
                headers=headers
            )
            response.raise_for_status()

        try:
            # Create a new console
            console_id = create_console()
            
            # Commands to run
            commands = [
                "cd /home/{username}/alisan",
                "git pull origin main",
                "python -m pip install -r requirements.txt",
                "python manage.py migrate",
                "python manage.py collectstatic --noinput"
            ]
            
            # Execute commands
            for command in commands:
                run_command(console_id, command)
            
            # Reload the webapp
            reload_webapp()
            
            print("Deployment completed successfully!")
            
        except requests.exceptions.RequestException as e:
            print(f"Error during deployment: {str(e)}")
            exit(1)
        EOL

    - name: Deploy to PythonAnywhere
      env:
        ALISAN_USERNAME: ${{ secrets.ALISAN_USERNAME }}
        ALISAN_API_TOKEN: ${{ secrets.ALISAN_API_TOKEN }}
        PROJECT_NAME: ${{ secrets.ALISAN_USERNAME }}
      run: python deploy.py